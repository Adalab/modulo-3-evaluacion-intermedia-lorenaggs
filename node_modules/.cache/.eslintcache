[{"/Users/lorenaguartazaca/Documents/adalab-clone-github/modulo-3/modulo-3-evaluacion-intermedia-lorenaggs/src/index.js":"1","/Users/lorenaguartazaca/Documents/adalab-clone-github/modulo-3/modulo-3-evaluacion-intermedia-lorenaggs/src/components/App.js":"2"},{"size":229,"mtime":1650893929802,"results":"3","hashOfConfig":"4"},{"size":2175,"mtime":1650959202089,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","suppressedMessages":"8","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"enlkf2",{"filePath":"9","messages":"10","suppressedMessages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"/Users/lorenaguartazaca/Documents/adalab-clone-github/modulo-3/modulo-3-evaluacion-intermedia-lorenaggs/src/index.js",[],[],"/Users/lorenaguartazaca/Documents/adalab-clone-github/modulo-3/modulo-3-evaluacion-intermedia-lorenaggs/src/components/App.js",["13","14"],[],"import \"../styles/App.scss\";\nimport apiSeries from \"../services/api.json\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [seriesTvApi, setSeriesTvApi] = useState(apiSeries);\n  const [newPhrase, setnewPhrase] = useState({\n    quote: \"\",\n    character: \"\",\n  });\n  const [filter, setFilter] = useState(\"\");\n\n  const html = seriesTvApi.map((series, index) => {\n    return (\n      <li className=\"listApi\" key={index}>\n        <p>{series.quote}</p>\n        <p>{series.character}</p>\n      </li>\n    );\n  });\n\n  const handleInputNewPhrase = (ev) => {\n    setnewPhrase({ ...newPhrase, [ev.target.id]: ev.target.value });\n  };\n\n  const handleAddNewPhrase = (ev) => {\n    ev.preventDefault();\n    setSeriesTvApi([...seriesTvApi, newPhrase]);\n    setnewPhrase({\n      quote: \"\",\n      character: \"\",\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <div>\n        <div className=\"phraseFriends\">\n          <h1>Frases de Friends</h1>\n          <div>\n            <input\n              type=\"text\"\n              id=\"filterphrase\"\n              name=\"filterphrase\"\n              placeholder=\"Filtrar por frase\"\n            />\n            <input\n              type=\"text\"\n              id=\"allfilter\"\n              name=\"allfilter\"\n              placeholder=\"Filtrar por personaje\"\n            />\n          </div>\n        </div>\n      </div>\n      <ul>{html}</ul>\n      <form className=\"form\">\n        <h2>Añadir una nueva frase</h2>\n        <div>\n          <label htmlFor=\"\">Frase</label>\n          <input\n            type=\"text\"\n            id=\"quote\"\n            name=\"quote\"\n            value={newPhrase.quote}\n            onChange={handleInputNewPhrase}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"\">Personaje</label>\n          <input\n            type=\"text\"\n            id=\"character\"\n            name=\"character\"\n            value={newPhrase.character}\n            onChange={handleInputNewPhrase}\n          />\n        </div>\n        <input\n          className=\"btnAdd\"\n          type=\"submit\"\n          value=\"Añadir una nueva frase\"\n          onClick={handleAddNewPhrase}\n        />\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n",{"ruleId":"15","severity":1,"message":"16","line":11,"column":10,"nodeType":"17","messageId":"18","endLine":11,"endColumn":16},{"ruleId":"15","severity":1,"message":"19","line":11,"column":18,"nodeType":"17","messageId":"18","endLine":11,"endColumn":27},"no-unused-vars","'filter' is assigned a value but never used.","Identifier","unusedVar","'setFilter' is assigned a value but never used."]